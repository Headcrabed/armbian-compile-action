name: 'Armbian/build'
description: 'Armbian Linux build framework'
inputs:
  board:
    required: true
  flavor:
    required: true
  release-id:
    required: false
  github-token:
    required: false
runs:
  using: "composite"
  steps:
    - name: Get more space
      uses: easimon/maximize-build-space@master
      with:
        root-reserve-mb: 30720
        swap-size-mb: 1024
        remove-dotnet: 'true'
        remove-android: 'true'
    - name: Checkout
      uses: actions/checkout@v3
      with:
        repository: armbian/build
        ref: master
        path: build
    - name: Set env
      shell: bash
      run: |
        if [ ${{ inputs.flavor }} == "debian" ]
        then
          echo "release=sid" >> $GITHUB_ENV
          echo "build-minimal=no" >> $GITHUB_ENV
          echo "build-desktop=yes" >> $GITHUB_ENV
          echo "desktop-environment=gnome" >> $GITHUB_ENV
          echo "desktop-environment-config-name=config_base" >> $GITHUB_ENV
          echo "expert=no" >> $GITHUB_ENV
        elif [ ${{ inputs.flavor }} == "ubuntu" ]
        then
          echo "release=jammy" >> $GITHUB_ENV
          echo "build-minimal=no" >> $GITHUB_ENV
          echo "build-desktop=yes" >> $GITHUB_ENV
          echo "desktop-environment=gnome" >> $GITHUB_ENV
          echo "desktop-environment-config-name=config_base" >> $GITHUB_ENV
          echo "expert=yes" >> $GITHUB_ENV
        elif [ ${{ inputs.flavor }} == "ubuntu_kde" ]
        then
          echo "release=jammy" >> $GITHUB_ENV
          echo "build-minimal=no" >> $GITHUB_ENV
          echo "build-desktop=yes" >> $GITHUB_ENV
          echo "desktop-environment=kde-plasma" >> $GITHUB_ENV
          echo "desktop-environment-config-name=config_base" >> $GITHUB_ENV
          echo "expert=yes" >> $GITHUB_ENV
        elif [ ${{ inputs.flavor }} == "debian_kde" ]
        then
          echo "release=sid" >> $GITHUB_ENV
          echo "build-minimal=no" >> $GITHUB_ENV
          echo "build-desktop=yes" >> $GITHUB_ENV
          echo "desktop-environment=kde-plasma" >> $GITHUB_ENV
          echo "desktop-environment-config-name=config_base" >> $GITHUB_ENV
          echo "expert=yes" >> $GITHUB_ENV
        fi
    - name: Build
      shell: bash
      run: |
        cd ./build
        touch .ignore_changes
        sed -i -e 's/-it//g' ./config/templates/config-docker.conf
        wget https://github.com/amazingfate/armbian-h88k-images/raw/master/board-dts-add-h88k.patch -O patch/kernel/rockchip-rk3588-legacy/board-makefile-add-h88k.patch
        mkdir -p arch/arm64/boot/dts/rockchip/
        wget https://github.com/amazingfate/armbian-h88k-images/raw/master/rk3588-h88k.dts -O arch/arm64/boot/dts/rockchip/rk3588-h88k.dts
        git diff --no-index --output=./patch/kernel/rockchip-rk3588-legacy/board-dts-add-h88k.patch /dev/null arch/arm64/boot/dts/rockchip/rk3588-h88k.dts || ls -l ./patch/kernel/rockchip-rk3588-legacy/board-dts-add-h88k.patch
        wget https://github.com/amazingfate/armbian-h88k-images/raw/master/h88k.csc -O config/boards/h88k.csc
        docker_tag=$(cat VERSION|cut -d "-" -f1) && docker_tag_in_repo=${docker_tag:0:5} && docker pull ghcr.io/armbian/build:${docker_tag_in_repo}-amd64 && docker image tag ghcr.io/armbian/build:${docker_tag_in_repo}-amd64 armbian:$(cat VERSION)
        ./compile.sh docker \
        BOARD=${{ inputs.board }} \
        BRANCH=${{ inputs.branch }} \
        RELEASE=${{ env.release }} \
        BUILD_MINIMAL=${{ env.build-minimal }} \
        BUILD_DESKTOP=${{ env.build-desktop }} \
        KERNEL_ONLY=no \
        KERNEL_CONFIGURE=no \
        DESKTOP_ENVIRONMENT=${{ env.desktop-environment }} \
        DESKTOP_ENVIRONMENT_CONFIG_NAME=${{ env.desktop-environment-config-name }} \
        DESKTOP_APPGROUPS_SELECTED="3dsupport browsers remote_desktop" \
        EXPERT=${{ env.expert }} \
        BOARD_FIRMWARE_INSTALL="-full" \
        COMPRESS_OUTPUTIMAGE=sha,gpg,xz
    - name: Upload
      if: inputs.release-id != '' && inputs.github-token != ''
      uses: xresloader/upload-to-github-release@v1
      env:
          GITHUB_TOKEN: ${{ inputs.github-token }}
      with:
        release_id: ${{ inputs.release-id }}
        file: ./build/output/images/*
        draft: false
    - name: Rollback release
      if: failure() && inputs.release-id != '' && inputs.github-token != ''
      uses: author/action-rollback@stable
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
      with:
        release_id: ${{ inputs.release-id }}
